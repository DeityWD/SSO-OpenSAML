<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sms.organization.user.dao.UserDao">
	<insert id="insert" parameterType="org.sms.organization.user.entity.User">
		insert into sys_user ( ID,
		USER_NAME, LOGIN_ID, USER_PASSWORD, EMAIL,
		PHONE, ADRESS, CONFIRMNUM, EMPLOYEE_ID,
		ISlOCK, LOGIN_SUM, LAST_LOGIN_IP, LAST_LOGIN_DATE,
		CREATE_DATE, USABLE_STATUS, MODIFY_DATE, MODIFY_IP,
		MODIFY_USER_ID)
		values ( #{id},
		#{user_name,jdbcType=VARCHAR}, #{login_id,jdbcType=VARCHAR}, #{user_password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}, #{confirmnum},
		#{employee_id,jdbcType=VARCHAR},
		#{islock,jdbcType=VARCHAR}, #{login_sum}, #{last_login_ip,jdbcType=VARCHAR},
		#{last_login_date,jdbcType=TIMESTAMP},
		#{create_date,jdbcType=TIMESTAMP}, #{usable_status,jdbcType=CHAR},
		#{modify_date,jdbcType=TIMESTAMP}, #{modify_ip,jdbcType=VARCHAR},
		#{modify_user_id})
	</insert>

	<delete id="delete" parameterType="long">
		delete from sys_user where ID=#{id}
	</delete>

	<delete id="deleteMulti" parameterType="int">
		delete from sys_user where ID in
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="update" parameterType="org.sms.organization.user.entity.User">
		update sys_user set
		USER_NAME=#{user_name,jdbcType=VARCHAR}, LOGIN_ID=#{login_id,jdbcType=VARCHAR},
		USER_PASSWORD=#{user_password,jdbcType=VARCHAR},
		EMAIL=#{email,jdbcType=VARCHAR},
		PHONE=#{phone,jdbcType=VARCHAR}, ADRESS=#{adress,jdbcType=VARCHAR}, CONFIRMNUM=#{confirmnum},
		EMPLOYEE_ID=#{employee_id,jdbcType=VARCHAR},
		ISlOCK=#{islock,jdbcType=VARCHAR}, LOGIN_SUM=#{login_sum},
		LAST_LOGIN_IP=#{last_login_ip,jdbcType=VARCHAR},
		LAST_LOGIN_DATE=#{last_login_date,jdbcType=TIMESTAMP},
		CREATE_DATE=#{create_date,jdbcType=TIMESTAMP},
		USABLE_STATUS=#{usable_status,jdbcType=CHAR},
		MODIFY_DATE=#{modify_date,jdbcType=TIMESTAMP},
		MODIFY_IP=#{modify_ip,jdbcType=VARCHAR},
		MODIFY_USER_ID=#{modify_user_id}
		where ID=#{id}
	</update>

	<select id="get" parameterType="string" resultType="org.sms.organization.user.entity.User">
		select * from user where user.ID=#{id}
	</select>
	
	<select id="getByLoginId" parameterType="string" resultType="org.sms.organization.user.entity.User">
		select * from user where user.login_id=#{login_id}
	</select>

	<select id="getCount" parameterType="string" resultType="int"
		useCache="true">
		select count(sys_user.ID) from sys_user
		<if test="value != null and value.length > 0">
			where ${value}
		</if>
	</select>

	<select id="list" parameterType="map"
		resultType="org.sms.organization.user.entity.User">
		select sys_user.ID,
		sys_user.USER_NAME, sys_user.LOGIN_ID, sys_user.USER_PASSWORD, sys_user.EMAIL,
		sys_user.PHONE, sys_user.ADRESS, sys_user.CONFIRMNUM,
		sys_user.EMPLOYEE_ID,
		sys_user.ISlOCK, sys_user.LOGIN_SUM, sys_user.LAST_LOGIN_IP, sys_user.LAST_LOGIN_DATE
		from sys_user
		<if test="query != null and query != ''">
			where ${query}
		</if>
		<if test="orderStr != null and orderStr != ''">
			order by ${orderStr}
		</if>
	</select>
</mapper>